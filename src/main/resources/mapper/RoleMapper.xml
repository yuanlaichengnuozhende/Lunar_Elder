<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lunar.system.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.lunar.system.entity.Role">
    <id column="id" property="id"/>
    <result column="company_id" property="companyId"/>
    <result column="role_name" property="roleName"/>
    <result column="role_info" property="roleInfo"/>
    <result column="role_type" property="roleType"/>
    <result column="deleted" property="deleted"/>
    <result column="create_by" property="createBy"/>
    <result column="update_by" property="updateBy"/>
    <result column="create_time" property="createTime"/>
    <result column="update_time" property="updateTime"/>
  </resultMap>

  <insert id="insert" useGeneratedKeys="true" keyProperty="id">
    insert into sys_role (
      id,
      company_id,
      role_name,
      role_info,
      role_type,
      deleted,
      create_by,
      update_by,
      create_time,
      update_time)
    values (
      #{id},
      #{companyId},
      #{roleName},
      #{roleInfo},
      #{roleType},
      #{deleted},
      #{createBy},
      #{updateBy},
      #{createTime},
      #{updateTime})
  </insert>

  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleInfo != null">
        role_info,
      </if>
      <if test="roleType != null">
        role_type,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="companyId != null">
        #{companyId},
      </if>
      <if test="roleName != null">
        #{roleName},
      </if>
      <if test="roleInfo != null">
        #{roleInfo},
      </if>
      <if test="roleType != null">
        #{roleType},
      </if>
      <if test="deleted != null">
        #{deleted},
      </if>
      <if test="createBy != null">
        #{createBy},
      </if>
      <if test="updateBy != null">
        #{updateBy},
      </if>
      <if test="createTime != null">
        #{createTime},
      </if>
      <if test="updateTime != null">
        #{updateTime},
      </if>
    </trim>
  </insert>

  <update id="updateSelective">
    update sys_role
    <set>
      <if test="companyId != null">
        company_id=#{companyId},
      </if>
      <if test="roleName != null">
        role_name=#{roleName},
      </if>
      <if test="roleInfo != null">
        role_info=#{roleInfo},
      </if>
      <if test="roleType != null">
        role_type=#{roleType},
      </if>
      <if test="deleted != null">
        deleted=#{deleted},
      </if>
      <if test="createBy != null">
        create_by=#{createBy},
      </if>
      <if test="updateBy != null">
        update_by=#{updateBy},
      </if>
      <if test="createTime != null">
        create_time=#{createTime},
      </if>
    </set>
    where id=#{id}
  </update>

  <update id="update">
    update sys_role
    <set>
      company_id=#{companyId},
      role_name=#{roleName},
      role_info=#{roleInfo},
      role_type=#{roleType},
      deleted=#{deleted},
      create_by=#{createBy},
      update_by=#{updateBy},
      create_time=#{createTime},
    </set>
    where id=#{id}
  </update>

  <select id="findList" resultMap="BaseResultMap">
    select
    *
    from sys_role
    <include refid="findListSql"/>
    order by id desc
  </select>
  <select id="count" resultType="java.lang.Integer">
    select
    count(*)
    from sys_role
    <include refid="findListSql"/>
  </select>
  <sql id="findListSql">
    <where>
      <if test="id != null">
        and id=#{id}
      </if>
      <if test="companyId != null">
        and company_id=#{companyId}
      </if>
      <if test="roleName != null">
        and role_name=#{roleName}
      </if>
      <if test="roleInfo != null">
        and role_info=#{roleInfo}
      </if>
      <if test="roleType != null">
        and role_type=#{roleType}
      </if>
      <if test="deleted != null">
        and deleted=#{deleted}
      </if>
      <if test="createBy != null">
        and create_by=#{createBy}
      </if>
      <if test="updateBy != null">
        and update_by=#{updateBy}
      </if>
      <if test="createTime != null">
        and create_time=#{createTime}
      </if>
      <if test="updateTime != null">
        and update_time=#{updateTime}
      </if>
      <if test="idList != null and idList.size() > 0">
        and id in
        <foreach collection="idList" item="item" open="(" close=")" separator=",">
          #{item}
        </foreach>
      </if>
      <if test="likeRoleName != null and likeRoleName != ''">
        and role_name like concat('%', #{likeRoleName}, '%')
      </if>
    </where>
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select
    *
    from sys_role
    where id=#{id}
  </select>

  <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
    insert into sys_role (
        company_id,
        role_name,
        role_info,
        role_type,
        deleted,
        create_by,
        update_by,
        create_time
    )
    values
    <foreach collection="list" item="item" index="index" separator=",">
    (
        #{item.companyId},
        #{item.roleName},
        #{item.roleInfo},
        #{item.roleType},
        #{item.deleted},
        #{item.createBy},
        #{item.updateBy},
        #{item.createTime}
    )
    </foreach>
  </insert>

  <delete id="deleteByPrimaryKey">
    delete
    from sys_role
    where id=#{id}
  </delete>

</mapper>